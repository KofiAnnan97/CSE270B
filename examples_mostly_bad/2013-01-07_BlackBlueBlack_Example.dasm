;------------------------------------------------
;
; BlackBlueBlack Example
; Atari VCS Game 
; Created by Brinkman, Bo Dr. on 2014-01-07.
;
; Copyright (c) 2014 __MyCompanyName__. All rights reserved.
;
; Use with joystick controllers
;
;------------------------------------------------
	processor 	6502
	include 	vcs.h
	include 	macro.h

;------------------------------------------------
; Constants
;------------------------------------------------
DK_BLUE = $80
LT_BLUE = $8F

FRAMES_PER_CHANGE = 6

;------------------------------------------------
; RAM
;------------------------------------------------
    SEG.U   variables
    ORG     $80

bgcolor		.byte
frame		.byte
colordir	.byte

;------------------------------------------------
; Start of ROM
;------------------------------------------------
	SEG   Bank0
	ORG   $F000       	; 4k ROM start point

Start 
	CLEAN_START			; Clear RAM and Registers
	
	lda		#$FF
	sta		AUDV0
	sta		AUDV1

	;Initialize the bgcolor variable
	lda		#DK_BLUE
	sta		bgcolor
	
	lda		#0
	sta		frame
	
	lda		#1
	sta		colordir
	
;------------------------------------------------
; Vertical Blank
;------------------------------------------------
MainLoop
	lda		#0
	sta		VBLANK
	VERTICAL_SYNC
    lda     #43
    sta     TIM64T

	;***** Vertical Blank code goes here

	;**** Background luminance update logic
	;update frame counter
	inc 	frame
	lda		frame
	cmp		#FRAMES_PER_CHANGE
	bne		.dontresetcolor ;Change BG color every so many frames

	;reset frame counter back to 0
	lda		#0
	sta		frame
	
	;Calculate the new bgcolor
	clc
	lda		colordir
	adc		bgcolor
	sta		bgcolor
	
	;Check to see: is it too light?
	cmp		#LT_BLUE+1
	bne		.nottoolight
	
	;Reverse color direction
	lda		#255
	sta		colordir
	lda		#LT_BLUE-1
	sta		bgcolor
.nottoolight	
	
	;Check to see: is it too dark?
	cmp		#DK_BLUE-1
	bne		.dontresetcolor
	
	;Reverse color direction
	lda		#1
	sta		colordir
	lda		#DK_BLUE+1
	sta		bgcolor
.dontresetcolor

	;****** Read the reset switch
	lda		INPT4
	bmi		.resetNotPressed

	lda		#DK_BLUE
	sta		bgcolor
	lda 	#1
	sta		colordir
	
	
	
.resetNotPressed

	;*******Set the background color in the TIA
	lda		bgcolor
	sta		COLUBK
	
.waitForVBlank
	lda		INTIM
	bne		.waitForVBlank
	sta		WSYNC

;------------------------------------------------
; Kernel
;------------------------------------------------	
DrawScreen
	ldx		#192+1		; Kernel goes here
.scanline	
	dex
	sta		WSYNC
	bne		.scanline

;------------------------------------------------
; Overscan
;------------------------------------------------
	lda		#%01000010
	sta		VBLANK
    lda		#36
    sta		TIM64T

	;***** Overscan Code goes here

.waitForOverscan
	lda     INTIM
	bne     .waitForOverscan

	jmp		MainLoop

;------------------------------------------------
; ROM Tables
;------------------------------------------------
	;***** ROM tables go here

;------------------------------------------------
; Interrupt Vectors
;------------------------------------------------
	echo [*-$F000]d, " ROM bytes used"
	ORG    $FFFA
	.word  Start         ; NMI
	.word  Start         ; RESET
	.word  Start         ; IRQ
    
	END