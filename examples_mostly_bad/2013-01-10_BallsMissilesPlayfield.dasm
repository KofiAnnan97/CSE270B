;------------------------------------------------
;
; untitled
; Atari VCS Game 
; Created by Brinkman, Bo Dr. on 2014-01-10.
;
; Copyright (c) 2014 __MyCompanyName__. All rights reserved.
;
; Use with joystick controllers
;
;------------------------------------------------
	processor 	6502
	include 	vcs.h
	include 	macro.h

;------------------------------------------------
; Constants
;------------------------------------------------
BLACK = $00

PF_REFLECT = %00000001
PF_BALL_SIZE4 = %00100000

;------------------------------------------------
; RAM
;------------------------------------------------
    SEG.U   variables
    ORG     $80

horiz	.byte
vert	.byte

;------------------------------------------------
; Start of ROM
;------------------------------------------------
	SEG   Bank0
	ORG   $F000       	; 4k ROM start point

Start 
	CLEAN_START			; Clear RAM and Registers

	
	
	lda		#PF_REFLECT | PF_BALL_SIZE4
	sta		CTRLPF
	lda		#2
	sta		ENABL
	
	lda		#0
	sta		horiz
	lda		#85
	sta		vert
	
;------------------------------------------------
; Vertical Blank
;------------------------------------------------
MainLoop
	lda		#0
	sta		VBLANK
	VERTICAL_SYNC
    lda     #43
    sta     TIM64T

	;***** Vertical Blank code goes here
	sta 	WSYNC
	inc 	horiz
	
	lda		horiz
	clc
	sta		WSYNC
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
.horizloop
	sbc		#15		;2
	bpl		.horizloop	;3
	sta		RESBL
	
.waitForVBlank
	lda		INTIM
	bne		.waitForVBlank
	sta		WSYNC

;------------------------------------------------
; Kernel
;------------------------------------------------	
DrawScreen

	lda		#$80
	sta		COLUBK

	lda		#$47
	sta		COLUPF
	
	lda		#%11111111
	sta		PF0
	sta		PF1
	sta		PF2
	
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	
	lda		#%00010000
	sta		PF0
	
	lda		#0
	sta		PF1
	sta		PF2
	
	ldy		#177+1
	sta		WSYNC
	
.ballloop
	tya
	clc
	sbc		vert
	adc		#7

	bcs		.enableBall
	lda		#0
	sta		ENABL
	jmp		.dontEnableBall
.enableBall
	lda		#2
	sta		ENABL
.dontEnableBall
	dey
	sta		WSYNC
	bne		.ballloop

	lda		#%11111111
	sta		PF0
	sta		PF1
	sta		PF2
	
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC
	sta		WSYNC

;------------------------------------------------
; Overscan
;------------------------------------------------
	lda		#%01000010
	sta		VBLANK
    lda		#36
    sta		TIM64T

	;***** Overscan Code goes here
	lda		#$0
	sta		COLUBK
	sta		COLUPF
	sta		PF0
	sta		PF1
	sta		PF2
	
.waitForOverscan
	lda     INTIM
	bne     .waitForOverscan

	jmp		MainLoop

;------------------------------------------------
; ROM Tables
;------------------------------------------------
	;***** ROM tables go here

;------------------------------------------------
; Interrupt Vectors
;------------------------------------------------
	echo [*-$F000]d, " ROM bytes used"
	ORG    $FFFA
	.word  Start         ; NMI
	.word  Start         ; RESET
	.word  Start         ; IRQ
    
	END